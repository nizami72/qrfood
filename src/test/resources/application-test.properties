# Spring application
spring.application.name=qrfood-backend

# DataSource
spring.datasource.url=jdbc:mariadb://localhost:3306/qrfood
spring.datasource.username=qrfood
spring.datasource.password=HJuy67Qw@HjymPa
spring.datasource.driver-class-name=org.mariadb.jdbc.Driver
spring.jpa.open-in-view=true

logging.level.org.hibernate=DEBUG

spring.main.web-application-type=servlet
# JPA
#spring.jpa.database-platform=org.hibernate.dialect.MariaDBDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false

# SpringDoc OpenAPI
springdoc.api-docs.path=/v3/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.operationsSorter=method
springdoc.swagger-ui.tagsSorter=alpha
springdoc.swagger-ui.tryItOutEnabled=true
springdoc.packages-to-scan=az.qrfood.backend
springdoc.paths-to-match=/api/**
springdoc.swagger-ui.disable-swagger-default-url=true
springdoc.swagger-ui.configUrl=/v3/api-docs/swagger-config
springdoc.swagger-ui.url=/v3/api-docs
springdoc.cache.disabled=true

# ENVIRONMENT
protocol=${PROTOCOL:=http://}
version=
domain.name=${DOMAIN_NAME}
domain.port=${DOMAIN_PORT}

# URLs
host.name=${domain.name}${domain.port}${version}
host.name.redirect=${domain.name}:5173${version}
base.url=${protocol}${host.name}

s=/%s
add=/add
category=/category
client=/client
dish=/dish
dishes=/dishes
image=/image
menu=/menu
order-decision=/order-decision
order-items=/order-items
orders=/orders
qrcode=/qrcode
status=/status
tables=/tables
register=/register
owner=/owner


api=/api


#~ EATERY ENDPOINTS
#? POST, GET all /eatery
eatery=${api}/eatery

#? GET, PUT, DELETE all by id /eatery/{eateryId}
eatery.id=${eatery}/{eateryId}

#? GET by owner
eatery.owner=${eatery}${owner}/{ownerId}
#~ END


#~ CATEGORY ENDPOINTS
#? POST, GET ALL /eatery/{eateryId}/category
eatery.id.category=${eatery.id}${category}

#? GET PUT DELETE /eatery/{eateryId}/category/{categoryId}
eatery.id.category.id=${eatery.id.category}/{categoryId}
#~ END

#~ DISH MANAGEMENT
#? POST, GET ALL /eatery/{eateryId}/category/{categoryId}/dish
eatery.id.category.id.dish=${eatery.id.category.id}${dish}

#? GET PUT DELETE /eatery/{eateryId}/category/{categoryId}/dish/{dishId}
eatery.id.category.id.dish.id=${eatery.id.category.id.dish}/{dishId}
#~ END DISH MANAGEMENT


#~ TABLE MANAGEMENT
#? POST, GET ALL by eatery
table=${eatery.id}/table
#? GET, PUT, DELETE by id
table.id=${table}/{tableId}
#~ END TABLE MANAGEMENT


#~ ORDER MANAGEMENT
#? POST and GET ALL by eateryId: /api/eatery/{eateryId}/order (table id is given as a parameter in JSON)
order=${eatery.id}/order

#? GET ALL by tableId /api/eatery/{eateryId}/table/tableId
order.table.id=${order}/table/{tableId{

#? GET    by orderId /api/eatery/{eateryId}/order/{orderId}
#? DELETE by orderId /api/eatery/{eateryId}/order/{orderId}
#? PUT    by orderId /api/eatery/{eateryId}/order/{orderId}
order.id=${order}/{orderId}

#? GET by status: /api/eatery/{eateryId}/order/status/{status}
order.status=${order}${status}/{status}
#~ END ORDER MANAGEMENT


#~ ORDER ITEM MANAGEMENT
#? GET all order items
order.item=${eatery.id}/order-item

#? DELETE___delete order item by id /api/eatery/{eateryId}/order-item/{orderItemId}
#? PUT______update order item by id /api/eatery/{eateryId}/order-item/{orderItemId}
#? GET_____________order item by id /api/eatery/{eateryId}/order-item/{orderItemId}
order.item.id=${order.item}/{orderItemId}

#? GET_____all order items in order /api/eatery/{eateryId}/order-item/order/{orderId}
#? POST___new order item into order /api/eatery/{eateryId}/order-item/order/{orderId}
order.item.order.id=${order.item}/order/{orderId}
#~ END


#~ USER MANAGEMENT
#? POST    /api/eatery/{eateryId}/user Create a new user of an eatery
#? GET     /api/eatery/{eateryId}/user Get all users of an eatery
usr=/api/eatery/{eateryId}/user

#? DELETE  /api/eatery/{eateryId}/user/{id} Delete a user
#? GET     /api/eatery/{eateryId}/user/{id} Get a user by ID
#? PUT     /api/eatery/{eateryId}/user/{id} Update an existing user
user.id=/{userId}

#? GET     /api/eatery/{eateryId}/users Get all users
users=/users

#? GET     /api/eatery/{eateryId}/user/by-username/{username} Get a user by username
user.n=/name/{userName}

#? POST    /api/eatery/{eateryId}/user/register Register a new user
user.register=/register
#~ END

segment.api.category=${api}${category}
segment.api.client=${api}${client}
segment.api.dish=${api}${dish}
api.eatery=${api}${eatery}
api.user=${api}/user
api.user.register=${api}/user${register}
segment.api.qr-code=${api}${qrcode}
segment.client.orders=${client}${order-decision}
segment.category=${api}${eatery}/{eateryId}${category}
segment.menu=${host.name.redirect}${client}/eatery${s}/table${s}${add}${s}${menu}

relative.path.api.client.eatery.arg.table.arg=${segment.api.client}/eatery${s}/table${s}
full.path.fe.eatery.image=${base.url}${image}${eatery}${s}${s}
full.path.fe.category.image=${base.url}${image}${category}${s}${s}
full.path.fe.dish.image=${base.url}${image}${dish}${s}${s}
full.path.fe.api.tables.image=${base.url}${image}${tables}
full.path.fe.add.dish.2.order=${base.url}${api}${order-items}
full.path.fe.delete.menu-item=${base.url}${api}${order-items}${s}

# PATH SECTION
folder.host=${APP_ROOT_FOLDER:=./}
images.eatery=/images/eateries
images.categories=/images/categories
images.dishes=/images/dishes

folder.root.images.eatery=${folder.host}${images.eatery}
folder.root.images.categories=${folder.host}${images.categories}
folder.root.images.dishes=${folder.host}${images.dishes}

# JWT Configuration
jwt.secret=yourVerySecretKeyThatIsAtLeast256BitsLongAndShouldBeChangedInProduction
jwt.expiration=36000000

fall.back.photo=fallback.webp

all=/**


server.address=0.0.0.0
server.port=8080
